from hmmlearn import hmm
from model_training import *
from sklearn.externals import joblib

model = joblib.load("models/model_for_class_1.pkl")
obser_stare=joblib.load("Output2.txt")
print(obser_stare)
print(model)
print(model.transmat_ )
print(model.monitor_.converged)

#obser_stare=[[(0, False, False, True), (1, False, True, False), (0, False, False, True), (1, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False)], [(0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, False, False)], [(0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (2, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False)], [(0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (1, False, True, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False), (0, False, False, True), (0, False, False, False)]]
observations=video_analyse('videos/class_3/video_1')
print(observations)

print("tyle wynosi dla nowego" + str(model.score(observations)))
print("tyle wynosi dla starego" + str(model.score(obser_stare[0])))
print("tyle wynosi dla starego" + str(model.score(obser_stare[1])))
print("tyle wynosi dla starego" + str(model.score(obser_stare[3])))


